version: '3.7'

services:
  mysql:
    container_name: mysql
    restart: unless-stopped
    env_file:
      - .env
    build:
      context: ./dockerfiles
      dockerfile: mysql.dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - ./containers.conf/mysql/my.cnf:/etc/my.cnf
      - ./containers.conf/mysql/data:/var/lib/mysql:rw
      - ../mnt/sdb/data/backup/mysql_dump:/dump
      - ../logs:/var/log
    networks:
      app_network:
        ipv4_address: 172.25.0.7  # Static IP for DB
  redis:
    container_name: redis
    image: redis:7.2
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 6379:6379
    volumes:
      - ./containers.conf/redis/conf/sessions.conf:/usr/local/etc/redis/sessions.conf
      - ./containers.conf/redis/backup:/usr/local/etc/backup
      - ../logs:/usr/local/etc/logs
    entrypoint: sh -c 'redis-server /usr/local/etc/redis/sessions.conf && chmod 755 /usr/local/etc/logs/sessions.log'
    depends_on:
      - mysql
    networks:
      app_network:
        ipv4_address: 172.25.0.8  # Static IP for nextcloud

  nextcloud:
    container_name: nextcloud
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
    build:
      context: ./dockerfiles
      dockerfile: nextcloud.dockerfile
      args:
        - UID=${HOST_UID}
        - GID=${HOST_GID}
    ports:
      - 9000:80
    depends_on:
      # - mysql
      - redis
    volumes:
      - ../mnt/sdb/data:/var/www/data
      - ./containers.conf/nextcloud/html:/var/www/html
      - ./containers.conf/nextcloud/config:/var/www/html/config
      - ./containers.conf/nextcloud/custom_apps:/var/www/html/custom_apps
      - ./containers.conf/nextcloud/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ../logs:/var/www/logs # Add this line
    networks:
      app_network:
        ipv4_address: 172.25.0.6  # Static IP for nextcloud

  certbot:
    # image: certbot/certbot
    image: certbot/certbot:arm64v8-latest
    restart: unless-stopped
    volumes:
      - ./containers.conf/nginx/cert/conf:/etc/letsencrypt # Shared with cerbot for auto ssl generation
      - ./containers.conf/nginx/cert/www:/var/www/certbot  # Shared with cerbot for auto ssl generation
      #- ./logs:/var/log
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  nginx:
    container_name: nginx
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    depends_on:
      - certbot
      - nextcloud
    env_file:
      - .env
    # environment:
    #   - GLOBAL_HOST_NAME=${GLOBAL_HOST_NAME}
    volumes:
      - ./containers.conf/nginx/conf.d:/etc/nginx/conf.d
      - ./containers.conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../logs:/var/log/nginx
      - ./containers.conf/nginx/cert/conf:/etc/letsencrypt # Shared with cerbot for auto ssl generation
      - ./containers.conf/nginx/cert/www:/var/www/certbot  # Shared with cerbot for auto ssl generation
      - ./containers.conf/nextcloud/html:/var/www/html
    networks:
      app_network:
        ipv4_address: 172.25.0.5  # Static IP for Nginx

networks:
  app_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16